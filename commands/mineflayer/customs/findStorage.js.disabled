let { GoalLookAtBlock } = require('mineflayer-pathfinder').goals;

let Cuboid = require('./../../../src/js/cuboid.js')
var v = require('vec3');

module.exports = {
  command: 'findStorage',
  description: 'Try to find a specific item in nearby storage.',
  requiresEntity: true,
  author: 'Pix3lPirat3',
  execute: async function(sender, command, args) {

  bot.storage_memory = []

    let cube = new Cuboid(v(-24, 63, -16), v(-22, 65, -16)); // We grab one half of the double chests

    let chest_id = bot.registry.blocksByName['chest'].id;
    let chests = bot.findBlocks({
      matching: function(block) {
        return block.type === chest_id && cube.posIsIn(block.position)
      },
      useExtraInfo: true,
      maxDistance: 16,
      count: 50
    })

    console.log(`There are ${chests.length} chests to scan through..`)

    for(let a = 0; a < chests.length; a++) {
      let chest = chests[a];
      await bot.pathfinder.goto(new GoalLookAtBlock(chest, bot.world))
      let chest_window = await bot.openContainer(bot.blockAt(chest));
      bot.storage_memory.push({
        id: chest_window.id,
        position: chest,
        title: chest_window.title,
        slots: chest_window.slots,
        items: chest_window.containerItems(),
      })
      console.log(`Chest #${a} has ${chest_window.containerItems().length} items..`)
      await bot.closeWindow(chest_window)
    }

    if(args[0]) {



      console.log(`You want me to find: ${args[0]}`)
      let chest_containing_item = bot.storage_memory.find(i => i.items.find(inv => inv.name === args[0]));
      if(!chest_containing_item) return console.log(`There are no chests containing ${args[0]}`);

      console.log(`I found ${args} in: ${chest_containing_item}`)
      await bot.pathfinder.goto(new GoalLookAtBlock(chest_containing_item.position, bot.world));
      let open_container = await bot.openContainer(bot.blockAt(chest_containing_item.position))

      console.log(open_container.containerItems())

      let item_id = bot.registry.itemsByName[args[0]].id;

      console.log(`withdrawing item ID ${item_id}`)

      await open_container.withdraw(item_id, null, null, null);
      console.log('closing..')
      await open_container.close()

      await bot.lookAt(bot.players['Pix3lSlime'].entity.position);
      let item_in_inventory = bot.inventory.items().find(i => i.name === args[0]);
      console.log('item in inventory:')
      console.log(item_in_inventory)
      await bot.tossStack(item_in_inventory)
    }


    console.log(chests)
  }
}